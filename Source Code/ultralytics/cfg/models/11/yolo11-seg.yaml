# Ultralytics 🚀 AGPL-3.0 License - https://ultralytics.com/license

# Ultralytics YOLO11-seg instance segmentation model with P3/8 - P5/32 outputs
# Model docs: https://docs.ultralytics.com/models/yolo11
# Task docs: https://docs.ultralytics.com/tasks/segment


# Parameters



nc: 1 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n-seg.yaml' will call yolo11-seg-o.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 355 layers, 2876848 parameters, 2876832 gradients, 10.5 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 355 layers, 10113248 parameters, 10113232 gradients, 35.8 GFLOPs
  m: [0.50, 1.00, 512] # summary: 445 layers, 22420896 parameters, 22420880 gradients, 123.9 GFLOPs
  l: [1.00, 1.00, 512] # summary: 667 layers, 27678368 parameters, 27678352 gradients, 143.0 GFLOPs
  x: [1.00, 1.50, 512] # summary: 667 layers, 62142656 parameters, 62142640 gradients, 320.2 GFLOPs

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv, [128, 3, 2]] # 1-P2/4
  - [-1, 2, C3k2, [256, False, 0.25]]
  - [-1, 1, Conv, [256, 3, 2]] # 3-P3/8
  - [-1, 2, C3k2, [512, False, 0.25]]
  - [-1, 1, Conv, [512, 3, 2]] # 5-P4/16
  - [-1, 2, C3k2, [512, True]]
  - [-1, 1, Conv, [1024, 3, 2]] # 7-P5/32
  - [-1, 2, C3k2, [1024, True]]
  - [-1, 1, SPPF, [1024, 5]] # 9
  - [-1, 2, C2PSA, [1024]] # 10

# 修改后的分割头
head:
  # ------ 特征金字塔增强 ------
  - [-1, 1, nn.Upsample, [None, 4, "nearest"]]  # 上采样4倍->更高分辨率 (原为2倍)
  - [[-1, 2], 1, Concat, [1]]  # 拼接更浅层的P2特征（原仅用P3）
  - [-1, 2, C3k2, [256, False]]  # 增强特征融合

  # ------ 边缘敏感分支 ------
  - [-1, 1, Conv, [256, 5, 1, None, 1, nn.LeakyReLU(0.1)]]  # 大核卷积捕捉边缘
  - [-1, 1, Conv, [256, 3, 1]]  # 细化特征

  # ------ 多尺度特征聚合 ------
  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 13], 1, Concat, [1]]
  - [-1, 2, C3k2, [512, False]]

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 10], 1, Concat, [1]]
  - [-1, 2, C3k2, [1024, True]]

  # ------ 分割头强化 ------
  - [[16, 19, 22], 1, Segment, [nc, 64, 512]]  # 修改mask_channels=64, proto_channels=512
  - [-1, 1, Conv, [128, 3, 1]]  # 添加额外卷积细化输出
  - [-1, 1, nn.Conv2d, [nc, 1, 1]]  # 最终输出层
